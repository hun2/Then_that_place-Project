<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.FirstProject.goodplace.dao.GoodPlaceDAO">
 
 	<insert id="insertPlace" parameterType="com.FirstProject.goodplace.model.Place">
 		INSERT INTO `place`
 		(
			`userId`
			,`placeWhether`
			,`placeKategorie`
			,`placeArea`
			,`placeGrade`
			,`placePrice`
			,`placeSubject`
			,`placeContent`
			,`placeCreatedAt`
			,`placeUpdatedAt`
 		)
 		VALUES
 		(
 			#{userId}
 			,#{placeWhether}
 			,#{placeKategorie}
 			,#{placeArea}
 			,#{placeGrade}
 			,#{placePrice}
 			,#{placeSubject}
 			,#{placeContent}
 			, NOW()
 			, NOW()
 		)
 		
 		<selectKey resultType="int" keyProperty="id" order="AFTER">
 			SELECT LAST_INSERT_ID()
 		</selectKey>
 	</insert>
 	
 	<insert id="insertImage" parameterType="com.FirstProject.common.PlaceImage">
 		
 		
 		INSERT INTO `placeimage`
 		(
			`placeId`
			,`imagePath`
			,`imageCreatedAt`
			,`imageUpdatedAt`
 		)
 		VALUES
 		<foreach collection="imagePath" index='index' item="pathList" separator=",">
 		(
 			#{placeId}
 			,#{pathList}
 			, NOW()
 			, NOW()
 		)
 		</foreach>
 	</insert>
 	
 	<insert id="insertFood" parameterType="com.FirstProject.goodplace.model.Place">
 		INSERT INTO `food`
 		(
			`userId`
			,`placeId`
			,`foodName`
			,`foodPrice`
			,`foodCreatedAt`
			,`foodUpdatedAt`
 		)
 		VALUES
 		<foreach collection="foods" index="index" item="food" separator=",">
 		(
 			#{userId}
 			,#{id}
 			,#{food.foodName}
 			,#{food.foodPrice}
 			, NOW()
 			, NOW()
 		
 		)
 		</foreach>
 	</insert>
 	<select id="selectPlaceList" parameterType="com.FirstProject.login.model.User" resultType="com.FirstProject.goodplace.model.Place">
 		SELECT
 			`id`
			,`userId`
			,`placeWhether`
			,`placeKategorie`
			,`placeArea`
			,`placeGrade`
			,`placePrice`
			,`placeSubject`
			,`placeContent`
			,`placeCreatedAt`
			,`placeUpdatedAt`
 		FROM
 			place
 		WHERE
 			`userId` = #{userId}
 	</select>
 	<select id="selectList" resultType="com.FirstProject.goodplace.model.Place">
 		select 
 			* 
 		from 
 			`place`
 		WHERE
 			`placeWhether` = 'g'
 		AND `userId` = #{place.userId}
 		<if test="place.startDay != null and place.endDay != null  and !place.startDay.equals('') and !place.endDay.equals('')" >
 		AND
 		DATE_FORMAT(`placeCreatedAt`, '%Y-%m-%d') BETWEEN #{place.startDay} AND #{place.endDay}
 		</if>
 		<if test="place.placeArea != null and !place.placeArea.equals('') ">
 		AND
 		`placeArea` = #{place.placeArea}
 		</if>
 		<if test="place.placeKategorie != null and !place.placeKategorie.equals('') ">
 		AND
 		`placeKategorie` = #{place.placeKategorie}
 		</if>
 		<if test="place.minPrice != null and place.maxPrice != null">
 		AND
 		`placePrice` BETWEEN #{place.minPrice} AND #{place.maxPrice}
 		</if>
 		 <!-- <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(place.minGrade, place.maxGrade)"> -->
 		 <if test="place.minGrade != null and !place.minGrade.equals('') and place.maxGrade != null and !place.maxGrade.equals('')">
 		 AND
 		`placeGrade` BETWEEN #{place.minGrade} AND #{place.maxGrade}
 		 </if>
 		ORDER BY placeCreatedAt DESC
 		LIMIT #{startNum}, #{endNum}
 	</select>
 	
 	<select id="selectListLimit3" resultType="com.FirstProject.goodplace.model.Place" parameterType="string">
 		select 
 			* 
 		from 
 			place
 		WHERE
 			`placeWhether` = 'g'
 		AND `userId` = #{userId}
 		ORDER BY placeCreatedAt DESC
 		limit 3
 	</select>
 	
 	<select id="selectPlaceByPlaceIdAndUserId" resultType="com.FirstProject.goodplace.model.Place" parameterType="map">
 		SELECT
 			`id`
			,`userId`
			,`placeWhether`
			,`placeKategorie`
			,`placeArea`
			,`placeGrade`
			,`placePrice`
			,`placeSubject`
			,`placeContent`
			,`placeCreatedAt`
			,`placeUpdatedAt`
 		FROM
 			place
 		WHERE
 			`id` = #{placeId}
 		AND	
 			`userId` = #{userId}
 	</select>
 	<update id="updatePlaceListById" parameterType="com.FirstProject.goodplace.model.Place">
 		UPDATE `place`
 		SET
 			<if test="placeKategorie !=null and !placeKategorie.equals('')" >
			`placeKategorie` = #{placeKategorie}
			</if>
			<if test="placeArea !=null and !placeArea.equals('')" >
			,`placeArea` = #{placeArea}
			</if>
			<if test="placeGrade !=null and !placeGrade.equals('')" >
			,`placeGrade` = #{placeGrade}
			</if>
			<if test="placePrice !=null and !placePrice.equals('')" >
			,`placePrice` = #{placePrice}
			</if>
			<if test="placeSubject !=null and !placeSubject.equals('')" >
			,`placeSubject` = #{placeSubject}
			</if>
			<if test="placeContent !=null and !placeContent.equals('')" >
			,`placeContent` = #{placeContent}
			</if>
			,`placeUpdatedAt` = NOW()
 		WHERE
 			`id` = #{id}
 	</update>
 	
 	<delete id="deleteFoodListById" parameterType="com.FirstProject.goodplace.model.Place">
 		DELETE FROM `food`
 		WHERE
 			`placeId` = #{id}
 	</delete>
 	<delete id="deletePlaceListById" parameterType="com.FirstProject.goodplace.model.Place">
 		DELETE FROM `place`
 		WHERE
 			`id` = #{id}
 	</delete>
 	
 	
 	<select id="selectImageByCategorie" parameterType="List" resultType="com.FirstProject.goodplace.model.PlaceImage">
 		SELECT
 			`id`
			,`placeId`
			,`imagePath`
			,`imageCreatedAt`
			,`imageUpdatedAt`
 		FROM
 			`placeimage`
 		 WHERE 1 = 1
  		 AND (`ID`, `PLACEID`) IN (
       	SELECT MIN(ID) AS ID, PLACEID
         FROM `PLACEIMAGE`
        WHERE PLACEID IN (
        <foreach collection="list" item="item" separator=",">
 			#{item.id}
 		</foreach>
        )
     	GROUP BY PLACEID
   		)
   		order by imageCreatedAt desc
 	</select>
 	<select id="selectPlaceByPlaceId" parameterType="int" resultType="com.FirstProject.goodplace.model.Place">
 		SELECT
 			`id`
			,`userId`
			,`placeWhether`
			,`placeKategorie`
			,`placeArea`
			,`placeGrade`
			,`placePrice`
			,`placeSubject`
			,`placeContent`
			,`placeCreatedAt`
			,`placeUpdatedAt`
 		FROM
 			place
 		WHERE
 			`placeWhether` = 'g'
 		AND
 			`id` = #{placeId}
 	</select>
 	
 	
 	<!-- <select id="selectAllJoinList" parameterType="map" resultType="com.FirstProject.goodplace.model.Place">
 		SELECT
 			`id`
			,`userId`
			,`placeWhether`
			,`placeKategorie`
			,`placeArea`
			,`placeGrade`
			,`placePrice`
			,`placeSubject`
			,`placeContent`
			,`placeCreatedAt`
			,`placeUpdatedAt`
 		FROM
 			place
 		WHERE
 			`placeWhether` = 'g'
 	
 	
 	
 	
 	</select> -->
 	
 </mapper>